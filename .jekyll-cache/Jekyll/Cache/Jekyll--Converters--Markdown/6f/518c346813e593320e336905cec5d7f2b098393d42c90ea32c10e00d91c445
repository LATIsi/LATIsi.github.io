I"T	<p>JS 책을 보며 공부를 하다가 옵션객체와 연산자를 이용한 복제에 관해 이해한것을 정리한 포스트이다.</p>

<h2 id="옵션-객체">옵션 객체</h2>

<p>함수의 매개변수로 들어가는 객체 , 값을 입력하지않으면 초기화 하는 과정이 필요.</p>

<hr />

<h2 id="값-복사">값 복사</h2>

<p><strong>1. 기본 자료형</strong><br />
숫자, 문자열, 불값 복사시…<br />
값을 완전히 복사해 두개의 변수가 완전한 독립성을 가지게 되는것을 <b><code class="language-plaintext highlighter-rouge">값 볷사, 깊은 복사 -clone-</code></b> 라고 함.</p>

<p><strong>2. 객체</strong><br />
배열 같은 경우, 실제 값 저장이 아닌 주소값- 즉 참조값만을 복사하는거니 안의 데이터를 공유하게 된다.</p>

<p>두개의 변수가 독립적이지 않게 복사되는것을 <b><code class="language-plaintext highlighter-rouge">참조 복사, 얕은 복사</code></b>라고 함.<br />
 전개 연산자(스프레드 방식)를 사용하여 완전히 새로 복사하는것이 아닌 가장 바깥쪽에 있는 값만 복사되는것.</p>

<p>객체의 깊은 복사를 하고싶다면, 새로운 객체를 만들고 for문으로 키,값을 하나씩 옮겨야 함.</p>

<hr />

<h1 id="배열-복제">배열 복제</h1>

<h2 id="spred">spred</h2>

<p>…를 사용하기<br />
배열을 통채로 복사해주는 셈이다.</p>

<p>예시로,</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const arrayA =[1,2,3,4,5];
// 에서 arrayA를 복사하고 싶다면

const arrayB =[...arrayA]
//이런식으로 복사 가능.
</code></pre></div></div>

<hr />

<h2 id="rest">Rest</h2>

<p>rest문법은 복사해오면서 특정요소를 빼고 object형태로 복사해오는것으로 알고있다.<br />
객체, 배열, 함수 파라미터에서 사용 가능하며, 객체, 배열에서 사용시 비구조화 할당 문법과 함께 사용가능.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const 학교 = {
  이름: 'xx학교',
  설립일: '1970년',
  학생수: '1200명'
};

const { 이름 , ...학교내용 } = 학교;
console.log(이름);      // xx학교
console.log(학교내용);  // { 1970년 1200명 }

</code></pre></div></div>
:ET